#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

#define DEFAULT 0
#define KEYPAD 1
#define FUNCTION 2
#define KINESIS_MOD 3
#define DH_QWERTY 4
#define DH_MOD_I3 5
#define DH_MOD_TBD 6
#define DH_MOD_NUM 7
#define PRIME_DVORAK 8

/ {
    behaviors {
      #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO
      macro_ver: macro_ver {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings = <&kp RET>;
      };
      #endif

/* -- ` or | */
      gpipe: grave_pipe {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp GRAVE>, <&kp PIPE>;
          mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
      };

/* -- | or | */
      ppipe: pipe_pipe {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp PIPE>, <&kp PIPE>;
          mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
      };

/* -- + or 1 */
      pkp_n1: plus_kp_n1 {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp PLUS>, <&kp N1>;
          mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
      };

/* -- [ or 2 */
      lkp_n2: left_bracket_kp_n2 {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp LEFT_BRACKET>, <&kp N2>;
          mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
      };

/* -- { or 3 */
      lkp_n3: left_brace_kp_n3 {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp LEFT_BRACE>, <&kp N3>;
          mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
      };

/* -- ( or 4 */
      lkp_n4: left_parenthesis_kp_n4 {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp LEFT_PARENTHESIS>, <&kp N4>;
          mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
      };

/* -- & or 5 */
      akp_n5: amps_kp_n5 {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp AMPS>, <&kp N5>;
          mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
      };

/* -- = or 6 */
      ekp_n6: equal_kp_n6 {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp EQUAL>, <&kp N6>;
          mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
      };

/* -- ) or 7 */
      rkp_n7: right_parenthesis_kp_n7 {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp RIGHT_PARENTHESIS>, <&kp N7>;
          mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
      };

/* -- } or 8 */
      rkp_n8: right_brace_kp_n8 {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp RIGHT_BRACE>, <&kp N8>;
          mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
      };

/* -- ] or 9 */
      rkp_n9: right_bracket_kp_n9 {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp RIGHT_BRACKET>, <&kp N9>;
          mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
      };

/* -- * or 0 */
      skp_n0: star_kp_n0 {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp STAR>, <&kp N0>;
          mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
      };

/* -- ! or % */
      eprcnt: excl_prcnt {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp EXCL>, <&kp PRCNT>;
          mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
      };

/* -- $ or ` */
      dgrave: dllr_grave {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp DLLR>, <&kp GRAVE>;
          mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
      };

/* -- ` or ` */
      ggrave: grave_grave {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp GRAVE>, <&kp GRAVE>;
          mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
      };

/* -- \ or # */
      bhash: bslh_hash {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp BSLH>, <&kp HASH>;
          mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
      };

/* -- @ or ^ */
      acaret: at_caret {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp AT>, <&kp CARET>;
          mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
      };

/* -- quote or left arrow */
      aposleft: apos_left {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp APOS>, <&kp LEFT>;
          mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
      };

/* -- alt or right arrow */
      altright: alt_right {
          compatible = "zmk,behavior-mod-morph";
          #binding-cells = <0>;
          bindings = <&kp LALT>, <&kp RIGHT>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };

/* LEFT_SHIFT + BACKSPACE into DELETE, and morphs RIGHT_SHIFT + BACKSPACE into RIGHT_SHIFT + DELETE. */
        bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };
    };

  keymap {
    compatible = "zmk,keymap";

 /* 0 DEFAULT */
    default_layer {
      bindings = <
        &kp EQUAL &kp N1    &kp N2   &kp N3   &kp N4     &kp N5 &tog DH_QWERTY                                                           &mo KINESIS_MOD &kp N6 &kp N7 &kp N8    &kp N9   &kp N0   &kp MINUS
        &kp TAB   &kp Q     &kp W    &kp E    &kp R      &kp T  &tog PRIME_DVORAK                                                           &none &kp Y  &kp U  &kp I     &kp O    &kp P    &kp BSLH
        &kp ESC   &kp A     &kp S    &kp D    &kp F      &kp G  &none           &kp LCTRL &kp LALT &kp LGUI  &kp RCTRL           &none &kp H  &kp J  &kp K     &kp L    &kp SEMI &kp SQT
        &kp LSHFT &kp Z     &kp X    &kp C    &kp V      &kp B                            &kp HOME &kp PG_UP                           &kp N  &kp M  &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
        &mo FUNCTION     &kp GRAVE &kp CAPS &kp LEFT &kp RIGHT                &kp BSPC &kp DEL   &kp END  &kp PG_DN &kp ENTER &kp SPACE              &mo UP &kp DOWN  &kp LBKT &kp RBKT &mo FUNCTION      >;
    };

 /* 1 KEYPAD */
    keypad {
      bindings = <
        &kp EQUAL &kp N1    &kp N2   &kp N3   &kp N4     &kp N5 &trans                                                           &mo KINESIS_MOD &kp N6 &kp KP_NUM &kp KP_EQUAL &kp KP_DIVIDE &kp KP_MULTIPLY &kp MINUS
        &kp TAB   &kp Q     &kp W    &kp E    &kp R      &kp T  &none                                                            &none &kp Y  &kp KP_N7  &kp KP_N8    &kp KP_N9     &kp KP_MINUS    &kp BSLH
        &kp ESC   &kp A     &kp S    &kp D    &kp F      &kp G  &none           &kp LCTRL &kp LALT &kp LGUI  &kp RCTRL           &none &kp H  &kp KP_N4  &kp KP_N5    &kp KP_N6     &kp KP_PLUS     &kp SQT
        &kp LSHFT &kp Z     &kp X    &kp C    &kp V      &kp B                            &kp HOME &kp PG_UP                           &kp N  &kp KP_N1  &kp KP_N2    &kp KP_N3     &kp KP_ENTER    &kp RSHFT
        &mo FUNCTION     &kp GRAVE &kp CAPS &kp LEFT &kp RIGHT                &kp BSPC &kp DEL   &kp END  &kp PG_DN &kp ENTER &kp KP_N0              &kp UP     &kp DOWN     &kp KP_DOT    &kp RBKT        &mo FUNCTION
      >;
    };

 /* 2 FUNCTION */
    fn {
      bindings = <
        &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &tog DEFAULT                                           &mo DEFAULT &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12
        &trans &trans &trans &trans &trans &trans  &none                                           &none &trans &trans &trans &trans  &trans  &trans
        &trans &trans &trans &trans &trans &trans  &none        &trans &trans &trans &trans        &none &trans &trans &trans &trans  &trans  &trans
        &trans &trans &trans &trans &trans &trans                      &trans &trans                     &trans &trans &trans &trans  &trans  &trans
        &trans &trans &trans &trans &trans               &trans &trans &trans &trans &trans &trans              &trans &trans &trans  &trans  &trans
      >;
    };

 /* 3 KINESIS MOD */
    mod1 {
      bindings = <
        &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none                                                                     &trans                 &none        &none        &none        &none &none &none
        &none &none        &none        &none        &none        &none        &bootloader                                                               &bootloader            &none        &none        &none        &none &none &none
        &none &none        &none        &none        &none        &none        &none                   &none &none &bt BT_CLR &none                      &rgb_ug RGB_MEFS_CMD 5 &none        &none        &none        &none &none &none
        &none &none        &none        &none        &macro_ver   &none                                      &none &none                                                        &none        &none        &none        &none &none &none
        &none &none        &none        &none        &none                                       &none &none &none &none      &bl BL_TOG &rgb_ug RGB_TOG                                     &bl BL_INC   &bl BL_DEC   &none &none &none
      >;
    };

 /* 4 - QWERTY */
    dh_layer1 {
      bindings = <
        &ppipe    &pkp_n1   &lkp_n2                     &lkp_n3        &lkp_n4       &akp_n5  &tog DH_QWERTY                                                                  &mo KINESIS_MOD   &ekp_n6   &rkp_n7     &rkp_n8     &rkp_n9     &skp_n0     &eprcnt
        &kp TAB   &kp Q     &kp W                       &kp E          &kp R         &kp T    &none                                                                    &none   &kp Y     &kp U       &kp I       &kp O       &kp P       &bhash
        &kp ESC   &kp A     &kp S                       &kp D          &kp F         &kp G    &none                 &kp LCTRL &kp LALT   &kp LGUI  &kp RCTRL           &none   &kp H     &kp J       &kp K       &kp L       &kp SEMI    &kp MINUS
        &kp LSHFT &kp Z     &kp X                       &kp C          &kp V         &kp B                                    &kp HOME   &kp PG_UP                             &kp N     &kp M       &kp COMMA   &kp DOT     &kp FSLH    &kp RSHFT
        &kp LCTRL &dgrave   &lt DH_MOD_NUM GRAVE                 &aposleft      &altright                          &bspc_del &kp LCTRL &kp LGUI  &kp RCTRL &kp ENTER &kp SPACE                    &lt DH_MOD_I3 UP    &lt DH_MOD_TBD DOWN  &kp APOS    &acaret     &mo FUNCTION
      >;
    };

 /* 5 DH MOD 1 */
    dh_mod2 {
      bindings = <
        &trans                  &trans            &trans                &trans                  &trans                 &trans               &trans                                                               &trans      &trans      &trans      &trans      &trans      &trans      &trans

                                /* Workspace 1 */ /* Workspace 2 */     /* Workspace 3 */       /* Workspace 4 */      /* Workspace 5 */
        &trans                  &kp LG(N1)        &kp LG(N2)            &kp LG(N3)              &kp LG(N4)             &kp LG(N5)           &trans                                                               &trans      &trans      &trans      &trans      &trans      &trans      &trans

                                /* Scratch 1 */   /* Scratch 2 */       /* Scratch 3 */         /* Scratch 4 */        /* Scratch 5 */
        &trans                  &kp LG(MINUS)     &kp LG(EQUAL)         &kp LG(LBKT)            &kp LG(RBKT)           &kp LG(BSLH)         &trans                                                               &trans      &trans      &trans      &trans      &trans      &trans      &trans

                                                  /* Browser */         /* Editor */            /* Terminal */
        &none                   &trans            &trans                &trans                  &trans                 &trans                                          &trans &trans                                         &trans      &trans      &trans      &trans      &trans      &trans
        &trans                  &trans            &trans                &trans                  &trans                                                   &trans &trans &trans &trans &trans &trans                                       &trans      &trans      &trans      &trans      &trans
      >;
    };

 /* 6 DH MOD 2  */
    dh_layer2 {
      bindings = <
        &trans                  &kp N1            &kp N2                &kp N3                  &kp N4                 &kp N5               &trans                                                               &kp N6      &kp N7      &kp N8      &kp N9      &kp N0      &trans      &trans
        &trans                  &trans            &trans                &trans                  &trans                 &trans               &trans                                                               &trans      &trans      &trans      &trans      &trans      &trans      &trans
        &trans                  &trans            &trans                &trans                  &trans                 &trans               &trans                                                               &trans      &trans      &trans      &trans      &trans      &trans      &trans
        &trans                  &trans            &trans                &trans                  &trans                 &trans                                          &trans &trans                                         &trans      &trans      &trans      &trans      &trans      &trans
        &trans                  &trans            &trans                &trans                  &trans                                                   &trans &trans &trans &trans &trans &trans                                       &trans      &trans      &trans      &trans      &trans
      >;
    };

 /* 7 DH MOD - NUMPAD  */
    dh_mod3 {
      bindings = <
        &trans                  &trans            &trans                &trans                  &trans                 &trans               &trans                                                               &trans      &trans      &trans      &trans      &trans      &trans      &trans
        &trans                  &trans            &trans                &trans                  &trans                 &trans               &trans                                                               &trans      &trans      &kp KP_N7   &kp KP_N8   &kp KP_N9   &trans      &trans
        &trans                  &trans            &trans                &trans                  &trans                 &trans               &trans                                                               &trans      &trans      &kp KP_N4   &kp KP_N5   &kp KP_N6   &trans      &trans
        &trans                  &trans            &trans                &trans                  &trans                 &trans                                          &trans &trans                                         &trans      &kp KP_N1   &kp KP_N2   &kp KP_N3   &trans      &trans
        &trans                  &trans            &trans                &trans                  &trans                                                   &trans &trans &trans &trans &trans &trans                                       &kp KP_N0   &trans      &trans      &trans      &trans
      >;
    };


 /* 8 - DVORAK */
    dh_layer3 {
      bindings = <
        &ppipe    &pkp_n1     &lkp_n2   &lkp_n3  &lkp_n4    &akp_n5 &tog DH_QWERTY                                                                         &mo KINESIS_MOD       &ekp_n6     &rkp_n7     &rkp_n8     &rkp_n9     &skp_n0   &eprcnt
        &kp TAB   &kp SEMI    &kp COMMA &kp DOT  &kp P      &kp Y   &trans                                                                          &none       &kp F       &kp G       &kp C       &kp R       &kp L     &bhash
        &kp ESC   &kp A       &kp O     &kp E    &kp U      &kp I   &none               &kp LCTRL   &kp LALT   &kp LGUI    &kp RCTRL                &none       &kp D       &kp H       &kp T       &kp N       &kp S     &kp MINUS
        &kp LSHFT &kp APOS    &kp Q     &kp J    &kp K      &kp X                                   &kp HOME   &kp PG_UP                                        &kp B       &kp M       &kp W       &kp V       &kp Z     &kp RSHFT
        &mo FUNCTION     &dgrave     &ggrave   &kp LEFT &kp RIGHT                    &kp BSPC  &kp DEL     &kp END    &kp PG_DN   &kp ENTER   &kp SPACE                            &mo 5       &kp 6       &kp FSLH    &acaret   &mo FUNCTION
        >;
    };
  };
};
